extend type Query {
    # 불량 정보 조회 관련 쿼리
    defectInfoList(filter: DefectInfoFilter): [DefectInfo]!
    defectInfoByProdResultId(prodResultId: String!): [DefectInfo]!
    defectStatsByProduct(fromDate: String!, toDate: String!): [DefectStatsByProduct]!
    defectStatsByCause(fromDate: String!, toDate: String!): [DefectStatsByCause]!
}

extend type Mutation {
    saveDefectInfo(createdRows: [DefectInfoInput], updatedRows: [DefectInfoUpdate]): Boolean
    deleteDefectInfo(defectId: String!): Boolean
}

# 불량 정보 조회용 필터
input DefectInfoFilter {
    workOrderId: String
    prodResultId: String
    defectId: String
    productId: String
    productName: String
    defectType: String
    fromDate: String
    toDate: String
    state: String
    flagActive: Boolean
}

# 불량 정보 Entity
type DefectInfo {
    id: Int
    site: String
    compCd: String
    workOrderId: String
    prodResultId: String
    defectId: String
    productId: String
    productName: String
    defectQty: Float
    defectType: String
    defectReason: String
    resultInfo: String
    state: String
    defectCause: String
    equipmentId: String
    createDate: String
    createUser: String
    updateDate: String
    updateUser: String
    flagActive: Boolean
    # 관계형 필드
    workOrder: WorkOrder
    productionResult: ProductionResult
}

# 불량 정보 등록 입력
input DefectInfoInput {
    workOrderId: String!
    prodResultId: String!
    productId: String
    productName: String
    defectQty: Float
    defectType: String
    defectReason: String
    resultInfo: String
    state: String
    defectCause: String
    equipmentId: String
    flagActive: Boolean
}

# 불량 정보 수정 입력
input DefectInfoUpdate {
    defectId: String!
    workOrderId: String
    prodResultId: String
    productId: String
    productName: String
    defectQty: Float
    defectType: String
    defectReason: String
    resultInfo: String
    state: String
    defectCause: String
    equipmentId: String
    flagActive: Boolean
}

# 제품별 불량 통계
type DefectStatsByProduct {
    productId: String
    productName: String
    totalDefectQty: Float
    defectCount: Int
    defectTypes: [DefectTypeCount]
    defectCauses: [DefectCauseCount]
}

# 원인별 불량 통계
type DefectStatsByCause {
    defectCause: String
    totalDefectQty: Float
    defectCount: Int
    products: [ProductDefectCount]
}

# 불량 유형별 통계
type DefectTypeCount {
    defectType: String
    count: Int
    qty: Float
    percentage: Float
}

# 불량 원인별 통계
type DefectCauseCount {
    cause: String
    count: Int
    qty: Float
    percentage: Float
}

# 제품별 불량 통계
type ProductDefectCount {
    productId: String
    productName: String
    qty: Float
    count: Int
    percentage: Float
}

# 생산실적과 작업지시에도 불량 정보 관계 추가
extend type ProductionResult {
    defectInfos: [DefectInfo]
}

extend type WorkOrder {
    defectInfos: [DefectInfo]
}