plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.9.25'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.9.25'
    id 'org.springframework.boot' version '3.4.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.9.25'
    id 'org.jetbrains.kotlin.kapt' version '1.9.25' // 추가: Kotlin 어노테이션 프로세서 지원
}

group = 'kr.co.imoscloud'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('netflixDgsVersion', "10.0.4")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // Spring Boot 제공 로깅 의존성 사용
    implementation 'org.springframework.boot:spring-boot-starter-logging'

    // 명시적 의존성 제거 (Spring Boot가 관리하도록)
    // implementation 'org.slf4j:slf4j-api:2.0.11'
    // implementation 'ch.qos.logback:logback-classic:1.4.14'

    // Janino 의존성 추가
    implementation 'org.codehaus.janino:janino:3.1.11'

    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'com.netflix.graphql.dgs:graphql-dgs-spring-graphql-starter'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.netflix.graphql.dgs:graphql-dgs-spring-graphql-starter-test'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // QueryDSL 의존성 추가
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    kapt 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    kapt 'jakarta.annotation:jakarta.annotation-api'
    kapt 'jakarta.persistence:jakarta.persistence-api'
}

dependencyManagement {
    imports {
        mavenBom "com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:${netflixDgsVersion}"
    }
}

kotlin {
    compilerOptions {
        freeCompilerArgs.addAll '-Xjsr305=strict'
    }
}

allOpen {
    annotation 'jakarta.persistence.Entity'
    annotation 'jakarta.persistence.MappedSuperclass'
    annotation 'jakarta.persistence.Embeddable'
}

tasks.named('test') {
    useJUnitPlatform()
}

bootJar {
    mainClass = 'kr.co.imoscloud.ImosBackEndApplication'
}

springBoot {
    mainClass = 'kr.co.imoscloud.ImosBackEndApplication'
}

// QueryDSL Q 클래스 생성 경로 설정
sourceSets {
    main {
        java {
            srcDir "$buildDir/generated/source/kapt/main"
        }
    }
}