type Company {
    id: ID,
    site: String,
    compCd: String!,
    businessRegistrationNumber: String,
    corporateRegistrationNumber: String,
    companyName: String!,
    imagePath: String,
    businessAddress: String,
    businessType: String,
    businessItem: String,
    paymentDate: String,
    expiredDate: String,
    flagSubscription: String,
    loginId: String,
    phoneNumber: String,
    flagActive: String
}

input CompanyInput {
    id: Int
    site: String
    compCd: String
    companyName: String
    businessRegistrationNumber: String
    corporateRegistrationNumber: String
    companyStatus: String
    imagePath: String
    businessAddress: String
    businessType: String
    businessItem: String
    paymentDate: String
    expiredDate: String
    flagSubscription: Boolean
    loginId: String
    phoneNumber: String
    defaultUserPwd: String
}

input CompanySearchCondition {
    site: String,
    companyName: String
}

extend type Mutation {
    upsertCompany(req: CompanyInput): String
    deleteCompany(id: Int): Boolean
}

extend type Query {
    getCompaniesForSelect: [Company]
    getCompanies(req: CompanySearchCondition): [Company]
    getCompanyDetails: Company
}