type ShipmentHeader {
    id: Int
    site: String
    compCd: String
    orderNo: String
    orderDate: String
    orderer: String
    orderQuantity: Int
    customerId: String
    totalAmount: Int
    shipmentStatus: String
    shippedQuantity: Int
    unshippedQuantity: Int
    remark: String
    flagPrint: Boolean
}

type ShipmentDetail {
    id: Int
    site: String
    compCd: String
    orderNo: String
    orderSubNo: String
    systemMaterialId: String
    materialName: String
    materialStandard: String
    unit: String
    quantity: Int
    stockQuantity: Int
    shipmentId: Int
    shipmentDate: String
    shippedQuantity: Int
    unshippedQuantity: Int
    cumulativeShipmentQuantity: Int
    shipmentWarehouse: String
    shipmentHandler: String
    remark: String
}

type WarehouseSummery {
    factoryId: String
    factoryName: String
    warehouseId: String
    warehouseName: String
    warehouseType: String
}

type MaterialSummery {
    seq: Int
    materialType: String
    materialCategory: String
    systemMaterialId: String
    userMaterialId: String
    materialName: String
    materialStandard: String
    unit: String
    minQuantity: Int
    maxQuantity: Int
    baseQuantity: Int
    manufacturerName: String
    supplierId: String
    materialStorage: String
}

input ShipmentSearchRequest {
    orderNo: String
    fromDate: String
    toDate: String
    customerId: String
    shipmentStatus: String
}

input ShipmentDetailRequest {
    id: Int
    site: String
    compCd: String
    orderNo: String
    orderSubNo: String
    systemMaterialId: String
    materialName: String
    materialStandard: String
    unit: String
    quantity: Int
    stockQuantity: Int
    shipmentId: Int
    shipmentDate: String
    shippedQuantity: Int
    unshippedQuantity: Int
    cumulativeShipmentQuantity: Int
    shipmentWarehouse: String
    shipmentHandler: String
    remark: String
}

input ShipmentDetailEntryRequest {
    orderNo: String
    warehouseId: String
}

extend type Query {
    getShipmentHeaders(req: ShipmentSearchRequest): [ShipmentHeader]
    getShipmentDetails(id: Int): [ShipmentDetail]
    prepareShipmentDetailsForEntry(req: ShipmentDetailEntryRequest): [ShipmentDetail]
    getWarehouseByMaterialId(materialId: String!): [WarehouseSummery]
    getMaterialByOrderNo(orderNo: String!): [MaterialSummery]
}

extend type Mutation {
    upsertShipmentDetails(list: [ShipmentDetailRequest]!): String
    softDeleteShipment(shipmentId: Int!): String
}