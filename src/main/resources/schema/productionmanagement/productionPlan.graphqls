extend type Query {
    productionPlans(filter: ProductionPlanFilter): [ProductionPlan]!
    productionPlansWithWorkOrders(filter: ProductionPlanFilter): [ProductionPlan]!
    productMaterials: [Material]! # 새로운 쿼리 추가
    planVsActual(filter: PlanVsActualFilter): [PlanVsActual]
    periodicProduction(filter: PlanVsActualFilter): [PeriodicProduction]

}

extend type Mutation {
    # 생산계획 저장 및 수정 관련 뮤테이션 추가
    saveProductionPlan(createdRows: [ProductionPlanInput], updatedRows: [ProductionPlanUpdate]): Boolean
    deleteProductionPlans(prodPlanIds: [String!]!): ProductionPlanDeleteResult
}

# ProductionPlan 타입 정의 - DTO와 매핑됨
type ProductionPlan {
    id: Int
    site: String
    compCd: String
    prodPlanId: String
    orderId: String
    orderDetailId: String
    productId: String
    productName: String  # MaterialMaster 테이블에서 조인한 필드
    materialCategory: String  # MaterialMaster 테이블에서 조인한 필드
    shiftType: String
    planQty: Float
    # 계획시작일시 - 날짜와 시간(시, 분) 포함 (형식: "yyyy-MM-dd HH:mm" 또는 "yyyy-MM-ddTHH:mm")
    planStartDate: String
    # 계획종료일시 - 날짜와 시간(시, 분) 포함 (형식: "yyyy-MM-dd HH:mm" 또는 "yyyy-MM-ddTHH:mm")
    planEndDate: String
    createDate: String
    createUser: String
    updateDate: String
    updateUser: String
    flagActive: Boolean
    workOrders: [WorkOrder]  # 리졸버를 통해 처리됨
}

# 계획대비 설적 조회
type PlanVsActual {
    prodPlanId: String
    planQty: Float
    totalOrderQty: Float
    completedOrderQty: Float
    achievementRate: Float
    materialName: String
    systemMaterialId: String
}

type PeriodicProduction {
    materialName: String
    totalGoodQty: Float
    totalDefectQty: Float
    totalDefectRate: Float
}

#계획대비 실적조회, 기간별 생산 실적, 불량율 현황 (공통 필터)
input PlanVsActualFilter {
    systemMaterialIds: [String]
    startDate: String
    endDate: String
}

input ProductionPlanFilter {
    prodPlanId: String
    orderId: String
    orderDetailId: String
    productId: String
    productName: String
    materialCategory: String  # 제품 유형 필드 (필터링 용도)
    shiftType: String
    planStartDateFrom: String
    planStartDateTo: String
    planEndDateFrom: String
    planEndDateTo: String
    flagActive: Boolean
}

input ProductionPlanInput {
    orderId: String
    orderDetailId: String
    productId: String
    productName: String  # 클라이언트에서 전송용
    shiftType: String
    planQty: Float
    # 계획시작일시 - 날짜와 시간(시, 분) 포함 (형식: "yyyy-MM-dd HH:mm" 또는 "yyyy-MM-ddTHH:mm")
    planStartDate: String
    # 계획종료일시 - 날짜와 시간(시, 분) 포함 (형식: "yyyy-MM-dd HH:mm" 또는 "yyyy-MM-ddTHH:mm")
    planEndDate: String
    flagActive: Boolean
}

input ProductionPlanUpdate {
    prodPlanId: String!
    orderId: String
    orderDetailId: String
    productId: String
    productName: String  # 클라이언트에서 전송용
    shiftType: String
    planQty: Float
    # 계획시작일시 - 날짜와 시간(시, 분) 포함 (형식: "yyyy-MM-dd HH:mm" 또는 "yyyy-MM-ddTHH:mm")
    planStartDate: String
    # 계획종료일시 - 날짜와 시간(시, 분) 포함 (형식: "yyyy-MM-dd HH:mm" 또는 "yyyy-MM-ddTHH:mm")
    planEndDate: String
    flagActive: Boolean
}

# 생산계획 삭제 결과 타입
type ProductionPlanDeleteResult {
    success: Boolean!
    totalRequested: Int!
    deletedCount: Int!
    skippedCount: Int!
    skippedPlans: [String!]!
    message: String!
}