extend type Query {
    # 기본 생산실적 조회 쿼리
    productionResults(filter: ProductionResultFilter): [ProductionResult]!
    productionResultsByWorkOrderId(workOrderId: String!): [ProductionResult]!
    productionResultsAtMobile(filter: ProductionResultFilter): [ProductionResult]!
}

extend type Mutation {
    # 생산실적 관련 뮤테이션
    saveProductionResult(
        createdRows: [ProductionResultInput],
        defectInfos: [DefectInfoInput]
    ): Boolean
    deleteProductionResults(prodResultIds: [String!]!): Boolean
    
    # 모바일 전용 생산실적 뮤테이션
    startProductionAtMobile(input: ProductionResultInput!): String
    updateProductionResultAtMobile(
        prodResultId: String!,
        input: ProductionResultInput!,
        defectInfos: [DefectInfoInput]
    ): Boolean
}

# 기본 생산실적 조회용 필터
input ProductionResultFilter {
    workOrderId: String
    prodResultId: String
    productId: String
    equipmentId: String
    warehouseId: String
    prodStartTimeFrom: String
    prodStartTimeTo: String
    prodEndTimeFrom: String
    prodEndTimeTo: String
    flagActive: Boolean
}

# 생산실적 엔티티 타입
type ProductionResult {
    id: Int
    site: String
    compCd: String
    workOrderId: String
    prodResultId: String
    productId: String
    goodQty: Float
    defectQty: Float
    progressRate: String
    defectRate: String
    equipmentId: String
    warehouseId: String
    resultInfo: String
    defectCause: String
    prodStartTime: String   # 생산시작일시 추가
    prodEndTime: String     # 생산종료일시 추가
    createDate: String
    createUser: String
    updateDate: String
    updateUser: String
    flagActive: Boolean
    workOrder: WorkOrder
    defectInfos: [DefectInfo]
}

# 생산실적 입력 타입
input ProductionResultInput {
    workOrderId: String
    productId: String
    goodQty: Float
    defectQty: Float
    equipmentId: String
    warehouseId: String
    resultInfo: String
    defectCause: String
    prodStartTime: String! # 생산시작일시 추가
    prodEndTime: String! # 생산종료일시 추가
    flagActive: Boolean
}